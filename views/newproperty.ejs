<!DOCTYPE html>
<html>
<head>
  <title>Property Registration</title>
  <link rel="stylesheet" href="/css/newproperty.css">
  <link href="/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/landlord.csss" type="stylesheet">
   
</head>
<body>
  <div class="container">
    <h1 class="text-center">LAND LORD'S LANDING PAGE</h1>
    <h2 class="text-center">Property Registration</h2>
    <div class="row">
      <div class="form-container col-md-6">
        <form id="addPropertyForm" action="/api/property/register" enctype="multipart/form-data" method="post">
          <div class="mb-3">
            <label for="property_name" class="form-label">Property Name:</label>
            <input type="text" class="form-control" id="property_name" name="property_name" required>
          </div>
          <div class="mb-3">
            <label for="property_type" class="form-label">Property Type:</label>
            <select class="form-select" id="property_type" name="property_type" required>
              <option value="Apartment">Apartment</option>
              <option value="House">House</option>
              <option value="Villa">Villa</option>
              <option value="Condo">Condo</option>
              <option value="Townhouse">Townhouse</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="location" class="form-label">Location:</label>
            <input type="text" class="form-control" id="location" name="location" required>
          </div>
          <div class="mb-3">
            <label for="description" class="form-label">Description:</label>
            <textarea class="form-control" id="description" name="description" rows="4" required></textarea>
          </div>
          <div class="row">
            <div class="col">
              <label for="bedrooms" class="form-label">Number of Bedrooms:</label>
              <input type="number" class="form-control" id="bedrooms" name="bedrooms" required>
            </div>
            <div class="col">
              <label for="bathrooms" class="form-label">Number of Bathrooms:</label>
              <input type="number" class="form-control" id="bathrooms" name="bathrooms" required>
            </div>
          </div>
          <div class="mb-3">
            <label for="cost" class="form-label">Cost:</label>
            <input type="number" class="form-control" id="cost" name="cost" required>
          </div>
          <div class="mb-3">
            <label for="photos" class="form-label">Photos:</label>
            <input type="file" class="form-control" id="photos" name="photos"  accept="image/*" required>
          </div>
          <div class="mb-3">
            <label for="maps" class="form-label">Maps:</label>
            <input type="file" class="form-control" id="maps" name="maps" accept="image/*" required>
          </div>
          <div class="text-center">
            <button type="submit" class="btn btn-primary">Register Property</button>
          </div>
        </form>
      </div>
      
      <div class="properties-container  div-spacing   col-md-6">
        <h2>Properties List</h2>
        <ul id="propertiesList" class="list-group"></ul>
        <div class="properties-container2  col-md-6">
          <h4>Most Popular </h4>
          <ul id="popularPropertiesList" class="list-group"></ul>
        </div>
      </div>      
  </div>     
  <script>
    /*
    // Property array to store added properties
    var properties = [];
  
    // DOM elements
    var addPropertyForm = document.getElementById('addPropertyForm');
    var propertiesList = document.getElementById('propertiesList');
  
    // Add property event listener
    addPropertyForm.addEventListener('submit', function(event) {
      event.preventDefault();
  
      var property_name = document.getElementById('property_name').value;
      var property_type = document.getElementById('property_type').value;
      var location = document.getElementById('location').value;
      var description = document.getElementById('description').value;
      var bedrooms = document.getElementById('bedrooms').value;
      var bathrooms = document.getElementById('bathrooms').value;
      var cost = document.getElementById('cost').value;
      var photos = document.getElementById('photos').files;
      var maps = document.getElementById('maps').files;
  
      var property = {
        property_name: property_name,
        property_type: property_type,
        location: location,
        description: description,
        bedrooms: bedrooms,
        bathrooms: bathrooms,
        cost: cost,
        photos: photos,
        maps: maps
      };
  
      properties.push(property);
      renderPropertiesList();
      addPropertyForm.reset();
    });
  
    // Delete property event listener
    function deleteProperty(index) {
      properties.splice(index, 1);
      renderPropertiesList();
    }
  
    // Edit property event listener
    function editProperty(index) {
      var property = properties[index];
      var updatedName = prompt('Enter the updated name:', property.property_name);
      var updatedType = prompt('Enter the updated type:', property.property_type);
      var updatedLocation = prompt('Enter the updated location:', property.location);
      var updatedDescription = prompt('Enter the updated description:', property.description);
      var updatedBedrooms = prompt('Enter the updated number of bedrooms:', property.bedrooms);
      var updatedBathrooms = prompt('Enter the updated number of bathrooms:', property.bathrooms);
      var updatedCost = prompt('Enter the updated cost:', property.cost);
  
      if (updatedName && updatedType && updatedLocation && updatedDescription && updatedBedrooms && updatedBathrooms && updatedCost) {
        property.property_name = updatedName;
        property.property_type = updatedType;
        property.location = updatedLocation;
        property.description = updatedDescription;
        property.bedrooms = updatedBedrooms;
        property.bathrooms = updatedBathrooms;
        property.cost = updatedCost;

        var confirmMapsUpdate = confirm('Do you want to update the maps?');
    if (confirmMapsUpdate) {
      var updatedMaps = prompt('Enter the updated maps:', property.maps);
      property.maps = updatedMaps;
    }

    var confirmPhotosUpdate = confirm('Do you want to update the photos?');
    if (confirmPhotosUpdate) {
      var updatedPhotos = prompt('Enter the updated photos:', property.photos);
      property.photos = updatedPhotos;
    }

        renderPropertiesList();
      }
    }
  
    // Save property event listener
    function saveProperty(index) {
      var property = properties[index];
  
      var form = document.createElement('form');
      form.action = '/api/property/register';
      form.method = 'POST';
      form.enctype = 'multipart/form-data';
  
      // Create input elements for property data
      var propertyInputs = ['property_name', 'property_type', 'location', 'description', 'bedrooms', 'bathrooms', 'cost'];
      propertyInputs.forEach(function(inputName) {
        var input = document.createElement('input');
        input.type = 'hidden';
        input.name = inputName;
        input.value = property[inputName];
        form.appendChild(input);
      });
  
      // Append previous images
      if (property.photos.length > 0) {
        Array.from(property.photos).forEach(function(photo) {
          var input = document.createElement('input');
          input.type = 'hidden';
          input.name = 'photos';
          input.value = photo.name;
          form.appendChild(input);
        });
      }
  
      // Append previous maps
      if (property.maps.length > 0) {
        Array.from(property.maps).forEach(function(map) {
          var input = document.createElement('input');
          input.type = 'hidden';
          input.name = 'maps';
          input.value = map.name;
          form.appendChild(input);
        });
      }
  
      // Create input elements for new photos
      var newPhotosInput = document.createElement('input');
      newPhotosInput.type = 'file';
      newPhotosInput.name = 'photos';
      newPhotosInput.multiple = true;
      newPhotosInput.accept = 'image/*';
      form.appendChild(newPhotosInput);
  
      // Create input elements for new maps
      var newMapsInput = document.createElement('input');
      newMapsInput.type = 'file';
      newMapsInput.name = 'maps';
      newMapsInput.accept = 'image/*';
      form.appendChild(newMapsInput);
  
      // Create save button
      var saveButton = document.createElement('button');
      saveButton.type = 'button';
      saveButton.className = 'btn btn-success btn-sm';
      saveButton.textContent = 'Save';
      saveButton.onclick = function() {
        saveProperty(index);
      };
      form.appendChild(saveButton);
  
      // Submit the form
      document.body.appendChild(form);
      form.submit();
    }
  
    // Render properties list
    function renderPropertiesList() {
      propertiesList.innerHTML = '';
  
      properties.forEach(function(property, index) {
        var li = document.createElement('li');
        li.className = 'list-group-item';
        var imagesHTML = '';
  
        // Append previous images
        if (property.photos.length > 0) {
          Array.from(property.photos).forEach(function(photo) {
            imagesHTML += `<img src="${URL.createObjectURL(photo)}" alt="Property Image" style="width: 150px; height: 150px; object-fit: cover; margin-right: 10px;">`;
          });
        }
  
        // Append previous maps
        if (property.maps.length > 0) {
          Array.from(property.maps).forEach(function(map) {
            imagesHTML += `<img src="${URL.createObjectURL(map)}" alt="Property Map" style="width: 150px; height: 150px; object-fit: cover; margin-right: 10px;">`;
          });
        }
  
        li.innerHTML = `
          <div>
            <span><strong>Name:</strong> ${property.property_name}</span>
            <br>
            <span><strong>Type:</strong> ${property.property_type}</span>
            <br>
            <span><strong>Location:</strong> ${property.location}</span>
            <br>
            <span><strong>Description:</strong> ${property.description}</span>
            <br>
            <span><strong>Bedrooms:</strong> ${property.bedrooms}</span>
            <br>
            <span><strong>Bathrooms:</strong> ${property.bathrooms}</span>
            <br>
            <span><strong>Cost:</strong> ${property.cost}</span>
            <br>
            <div>
              ${imagesHTML}
            </div>
          </div>
          <div>
            <button type="button" class="btn btn-primary btn-sm" onclick="editProperty(${index})">Edit</button>
            <button type="button" class="btn btn-danger btn-sm" onclick="deleteProperty(${index})">Delete</button>
            <button type="button" class="btn btn-success btn-sm" onclick="saveProperty(${index})">Save</button>
          </div>
        `;
        propertiesList.appendChild(li);
      });
    }
  */
    // jQuery form validation
    $(document).ready(function() {
      $('#addPropertyForm').submit(function(event) {
        event.preventDefault();
  
        // Perform form validation
        var property_name = $('#property_name').val();
        var property_type = $('#property_type').val();
        var location = $('#location').val();
        var description = $('#description').val();
        var bedrooms = $('#bedrooms').val();
        var bathrooms = $('#bathrooms').val();
        var cost = $('#cost').val();
  
        // Check if any field is empty
        if (
          property_name === '' ||
          property_type === '' ||
          location === '' ||
          description === '' ||
          bedrooms === '' ||
          bathrooms === '' ||
          cost === ''
        ) {
          alert('Please fill in all the fields.');
          return;
        }
  
        // Check if property type is selected
        if (property_type === '') {
          alert('Please select a property type.');
          return;
        }
  
        // Check if bedrooms and bathrooms are positive numbers
        if (bedrooms <= 0 || bathrooms <= 0) {
          alert('Number of bedrooms and bathrooms should be greater than zero.');
          return;
        }
  
        // Check if cost is a positive number
        if (cost <= 0) {
          alert('Cost should be a positive number.');
          return;
        }
  
        // If all validations pass, submit the form
        this.submit();
      });
    });
  </script>
    
    <script src="/js/bootstrap.bundle.min.js"></script>
  </body>
  </html>